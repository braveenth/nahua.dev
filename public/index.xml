<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nahua Kang</title>
    <link>/</link>
    <description>Recent content on Nahua Kang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>kangnahua [at] gmail dot com (Nahua Kang)</managingEditor>
    <webMaster>kangnahua [at] gmail dot com (Nahua Kang)</webMaster>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 08 Feb 2020 11:19:44 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remake Our Self: My Path into Engineering from the Humanities</title>
      <link>/posts/2020/08/remake-our-self-my-path-into-engineering-from-the-humanities/</link>
      <pubDate>Sun, 30 Aug 2020 19:01:38 +0200</pubDate>
      <author>kangnahua [at] gmail dot com (Nahua Kang)</author>
      <guid>/posts/2020/08/remake-our-self-my-path-into-engineering-from-the-humanities/</guid>
      <description>This is a long, detailed, and brutally honest post in which I recount the failures that challenged me and the successes that I am grateful for in life. Feel free to read the TL;DR and skip to the last section on 5 takeaways for remaking your career.
TL;DR Having briefly encountered programming when I was 16, I was scared of it and swore not to touch it ever again. 10 years later, I had to learn programming out of desperation and this time I conquered my fear.</description>
    </item>
    
    <item>
      <title>Go Template: Using Execute vs. ExecuteTemplate</title>
      <link>/posts/2020/08/golang-template-execute-vs-executetemplate/</link>
      <pubDate>Fri, 28 Aug 2020 21:59:26 +0200</pubDate>
      <author>kangnahua [at] gmail dot com (Nahua Kang)</author>
      <guid>/posts/2020/08/golang-template-execute-vs-executetemplate/</guid>
      <description>Rendering the correct template is an important step in building a web application. If you are new to web programming in Go, chances are you might have come across two methods in the html/template package: func (*Template) Execute and func (*Template) ExecuteTemplate.
You might have also wondered: What are the differences between these two methods? The quick answer is to look up the official documentation:
 func (t *Template) Execute(wr io.</description>
    </item>
    
    <item>
      <title>Python: Immutables Are Not Always Immutable</title>
      <link>/posts/2020/03/python-immutables-are-not-always-immutable/</link>
      <pubDate>Sun, 22 Mar 2020 11:05:25 +0100</pubDate>
      <author>kangnahua [at] gmail dot com (Nahua Kang)</author>
      <guid>/posts/2020/03/python-immutables-are-not-always-immutable/</guid>
      <description>If you know a bit of Python, you probably have heard of immutable and mutable objects (see data model). Objects can either be mutable or immutable, depending on which type they are.
Immutables and Mutables: Basics First, let&amp;rsquo;s review the basics of immutables and mutables that we all know.
Mutable Objects Mutable ones can be changed after they are created. For Python, collections like list, dict, and set are mutable objects.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Sat, 08 Feb 2020 11:19:44 +0100</pubDate>
      <author>kangnahua [at] gmail dot com (Nahua Kang)</author>
      <guid>/projects/</guid>
      <description>Professional Work Currently I work professionally as a software engineer for Twenty Billion Neurons. My day-to-day role is using Python to implement the &amp;ldquo;logical functionality&amp;rdquo; of the brain of a deep-learning-powered virtual fitness trainer Ally. Download the app in App Store, it&amp;rsquo;s amazing!
Open Source Projects I am a firm believer in open source software. As of now, I devote my spare time to contribute to OpenMined, the privacy-preserving AI project that aims to unlock the power of deep learning and data while respecting the privacy for each individual.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 08 Feb 2020 10:29:09 +0100</pubDate>
      <author>kangnahua [at] gmail dot com (Nahua Kang)</author>
      <guid>/about/</guid>
      <description>This blog My personal hero, Richard Feynman, knew that knowing the name of something is different from knowing that thing. This blog is the documentation of my personal struggle in learning new programming languages and tools so that I, and perhaps you, will understand it and explain it to a 6-year-old with ease.
Skills I am proficient in Python and have good working knowledge of Javascript and Go.
In terms of libraries, I am familiar with PyTorch, Keras, Numpy, Flask, and some Go web programming packages.</description>
    </item>
    
  </channel>
</rss>